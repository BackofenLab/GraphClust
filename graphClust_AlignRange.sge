#!/bin/bash
#$ -l h_vmem=3G

## Please add here necessary paths
export PATH=/usr/local/perl/bin:$PATH

# all parameters for the shell script
working_dir=$1
logDir=$2
job_num=$3
aligs=$4
job_max=$5


shift 5


if [ -z "$job_num" ]; then
	echo "No job_num found (3rd param)!"
	exit;
fi

if [ -z "$aligs" ] || [ "$aligs" -le 0 ]; then
	echo "No number of all aligs>0 found (4th param)! Exit"
	exit;
fi

if [ -z "$SGE_TASK_ID" ] || [ "$SGE_TASK_ID" = "undefined" ]; then


	if [ -z "$job_max" ] && [ "$job_num" -gt 0 ]; then
		echo " (1) Provide job_max>0 in non SGE mode! Exit."
		exit;
	fi

	if [ "$job_max" -le 0 ] && [ "$job_num" -gt 0 ]; then
		echo " (2) Provide job_max>0 in non SGE mode! Exit."
		exit;
	fi

	if [ "$job_num" -gt 0 ]; then
		echo "No SGE environment found! Set SGE_TASK_ID=$job_num SGE_TASK_LAST=$job_max !"
		let SGE_TASK_ID=$job_num
		let SGE_TASK_LAST=$job_max
		JOB_ID="LOCAL"
	else
		echo "No SGE found and job_num=0 - do 1 job with range 1-$aligs!"
		let start=1
		let end=$aligs
	fi
fi


if [ -n "$SGE_TASK_ID" ]; then

	i=$(echo "($aligs+$SGE_TASK_LAST-1)/$SGE_TASK_LAST"|bc)

	end=$(($i*$SGE_TASK_ID))
	start=$(($end-$i+1))

	if [ $start -le $aligs -a $end -gt $aligs ]; then
	   echo "SGE Task $SGE_TASK_ID is last task!"
	   end=$aligs
	fi;

	if [ $end -gt $aligs ]; then
	   echo "SGE Task $SGE_TASK_ID not used!"
	   TASK_USED=0
	fi;

	echo "SGE TASK start range:" $start
	echo "SGE TASK end range  :" $end
else
	echo "Please use script in SGE environment with qsub!"
	exit
fi

#################################

cd $working_dir
mkdir -p $logDir

#echo $JOB_ID > $logDir/TASKID

#if [ -f $logDir/task-$SGE_TASK_ID.finished ]; then
#	exit;
#fi

touch $logDir/task-$SGE_TASK_ID.started

\time --version 1>/dev/null 2>/dev/null
timefail=$?

if [ "$timefail" != "0" ]; then
 	echo "gnu time failed! Run without time logging...";
 	echo "0.0:0.0" > $logDir/task-$SGE_TASK_ID.started
 	$@ --range $start-$end
else
	\time -p -o $logDir/task-$SGE_TASK_ID.started --format %e:%U $@ --range $start-$end
fi

#\time -p -o $logDir/task-$SGE_TASK_ID.started -a --format %e:%U $@ --range $start-$end

fail=$?

if [ "$fail" != "0" ]; then
	echo $fail >  $logDir/task-$SGE_TASK_ID.started
	\mv $logDir/task-$SGE_TASK_ID.started $logDir/task-$SGE_TASK_ID.error
	exit 1;
fi

touch $logDir/task-$SGE_TASK_ID.finished
cat $logDir/task-$SGE_TASK_ID.started > $logDir/task-$SGE_TASK_ID.finished
\rm $logDir/task-$SGE_TASK_ID.started

exit;

###############################################################################
## old

cmd=$1
cmdopts=$2
aligs=$3
locopts=$4
logDir=$5

#let SGE_TASK_ID=451
#let SGE_TASK_LAST=495

TASK_USED=1

if [ -z $SGE_TASK_ID ]; then
	echo "SGE job script is used in non-SGE environment! Job is executed as 1 job with $aligs alignments!"
	let SGE_TASK_ID=1
	let SGE_TASK_LAST=1
fi

if [ $SGE_TASK_ID -eq 0 ]; then
	echo "Wrong SGE TASK id! id=0"
	exit
fi

if [ $SGE_TASK_LAST -eq 0 ]; then
	echo "Wrong SGE TASK LAST number! last=0"
	exit
fi

if [ -n $SGE_TASK_ID ]; then

	i=$(echo "($aligs+$SGE_TASK_LAST-1)/$SGE_TASK_LAST"|bc)

	end=$(($i*$SGE_TASK_ID))
	start=$(($end-$i+1))

#	echo "start: $start end:$end i:$i"
	if [ $start -le $aligs -a $end -gt $aligs ]; then
	   echo "SGE Task $SGE_TASK_ID is last task!"
	   end=$aligs
	fi;

	if [ $end -gt $aligs ]; then
	   echo "SGE Task $SGE_TASK_ID not used!"
	   TASK_USED=0
	fi;

#	let start=$(($SGE_TASK_ID-1))*$(($(($aligs/$SGE_TASK_LAST))))+1
#	let end=$(($SGE_TASK_ID))*$(($(($aligs/$SGE_TASK_LAST))))

#	if [ $end -gt $aligs ]; then
#		end=$aligs
#	fi

	echo "SGE TASK start range:" $start
	echo "SGE TASK end range  :" $end
else
	echo "Please use script in SGE environment with qsub!"
	exit
fi

## check if job was already finisheds

if [ -f $logDir/task-$SGE_TASK_ID.finished ]; then
	exit;
fi

## task not used
if [ $TASK_USED -eq 0 ]; then
	touch $logDir/task-$SGE_TASK_ID.finished
	exit;
fi


################################################################################
## call job

echo $JOB_ID > $logDir/TASKID
touch $logDir/task-$SGE_TASK_ID.started

/usr/bin/time -p -o $logDir/task-$SGE_TASK_ID.started -a --format %e:%U $cmd $cmdopts --range $start-$end --locarna-opts "$locopts"

mv $logDir/task-$SGE_TASK_ID.started $logDir/task-$SGE_TASK_ID.finished

